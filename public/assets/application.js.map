{"version":3,"sources":["application.coffee","application_mixins.coffee","sync.coffee","application_helpers.coffee","MaintenanceAction.coffee","Record.coffee","Reminder.coffee","Session.coffee","Vehicle.coffee","MaintenanceSchedule.coffee","Records.coffee","Reminders.coffee","Vehicles.coffee","VehicleHeaderView.coffee","AddReminderView.coffee","AddServiceView.coffee","AddVehicleView.coffee","EditVehicleNotesView.coffee","EditVehicleView.coffee","ImportRecordsView.coffee","PopOverView.coffee","RecordsView.coffee","RemindersView.coffee","RemoveVehicleConfirmationView.coffee","RootView.coffee","SessionMenu.coffee","SessionView.coffee","VehicleDetailsView.coffee","VehicleNextActionsView.coffee","VehicleSettingsView.coffee","VehicleView.coffee","VehiclesMenu.coffee","VehiclesView.coffee","WelcomeView.coffee","ApplicationRouter.coffee","start.coffee"],"names":[],"mappings":"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","file":"application.js","sourcesContent":["Handlebars.registerHelpers = (methods) ->\n  _.each methods, (fn, name) ->\n    Handlebars.registerHelper name, fn\n\nApp =\n  start: ->\n    @session = new App.Session\n    @layout  = new App.RootView\n    @router  = new App.ApplicationRouter\n    @popover = new App.PopOverView\n\n    @vehicles = new App.Vehicles\n\n    $.when(@session.authorize())\n      .then( =>\n        @session.on 'auth:resolve', =>\n          fragment = Backbone.history.fragment\n          if !fragment or /login/.test(fragment)\n            App.router.redirectTo 'vehicles'\n\n        @session.on 'auth:reject', ->\n          App.router.redirectTo ''\n\n        Backbone.history.start()\n\n        if @session.isAuthorized()\n          @vehicles.fetch()\n          @session.trigger 'auth:resolve'\n        else\n          @session.trigger 'auth:reject'\n      )\n\n_.bindAll App\nwindow.App = App\n","_.mixin\n  capitalize: (string) ->\n    string.charAt(0).toUpperCase() + string.slice(1)\n","_sync = Backbone.sync\n\nBackbone.sync = (method, model, options) ->\n  options.url = buildUrl(method, model, options)\n\n  if model && (method == 'create' || method == 'update' || method == 'patch')\n    options.contentType = 'application/json';\n    options.data = JSON.stringify(options.attrs || model.toJSON());\n\n  _error = options.error\n  options.error = (xhr, status, error_thrown) ->\n    _error?(xhr, status, error_thrown)\n    App.session.unauthorize() if xhr.status == 401\n\n  _sync.call(this, method, model, options)\n\nbuildUrl = (method, model, options) ->\n  q   = $.param(App.session.toRequestJSON())\n  url = _.result model, 'url'\n  [url, q].join('?')\n","Handlebars.registerHelpers\n  log: (obj) ->\n    console.log obj\n\n  formatDate: (date, format) ->\n    moment(new Date(date)).utc().format(format) if date\n\n  formatNumber: (format, number) ->\n    numeral(number).format(format) if number\n\n  capitalize: (str) ->\n    _.capitalize(str) if str\n\n  markdown: (str) ->\n    marked(str) if str\n\n  any: (collection, options) ->\n    if !_.isEmpty(collection)\n      options.fn(this)\n","class App.MaintenanceAction extends Thorax.Model\n","class App.Record extends Thorax.Model\n  validatePresence: ['date', 'notes']\n  idAttribute: '_id'\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n\n  set: (data) ->\n    data.date    = moment(data.date).utc().format('YYYY-MM-DD')\n    data.mileage = numeral(data.mileage).value()\n\n    super(data)\n","class App.Reminder extends Thorax.Model\n  validatePresence: ['reminder']\n  idAttribute: '_id'\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n","class App.Session extends Thorax.Model\n  urlRoot: '/session'\n  idAttribute: 'uid'\n\n  initialize: ->\n    @on 'change:token', @onChangeToken\n\n  toRequestJSON: ->\n    _.pick(@toJSON(), 'uid', 'token')\n\n  login: (data) ->\n    @save(data)\n\n  logout: ->\n    @destroy()\n    localStorage.clear()\n    @clear()\n    App.session = new @constructor\n\n  authorize: (data) ->\n    if data\n      @set(data)\n      localStorage.setItem 'session', JSON.stringify(@toJSON())\n    else\n      data = JSON.parse(localStorage.getItem('session'))\n      @set(data) if data\n\n  unauthorize: ->\n    @logout()\n\n  isAuthorized: ->\n    !!@get 'token'\n\n  onChangeToken: ->\n    if @isAuthorized()\n      @trigger 'auth:resolve'\n    else\n      @trigger 'auth:reject'\n","class App.Vehicle extends Thorax.Model\n  idAttribute: '_id'\n  validatePresence: ['name']\n  url: ->\n    if @id\n      \"/api/vehicles/#{@id}\"\n    else\n      \"/api/vehicles\"\n\n  settings: ->\n    @get('settings') || {}\n\n  hasVin: ->\n    !_.isEmpty @get('vin')\n\n  hasDetails: ->\n    !_.isEmpty @get('details')\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    if attrs.vin && attrs.vin.length != 17\n      errors.push {\n        name: 'vin'\n        message: 'must be 17 characters'\n      }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n","class App.MaintenanceSchedule extends Thorax.Collection\n  model: App.MaintenanceAction\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/maintenance\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n\n  nextActions: (mileage, mpd) ->\n    RECURRING_ID = 4\n    DAYS = 90\n\n    actions = @map (model) ->\n      m             = model.toJSON()\n      inNextMileage = m.intervalMileage - (mileage % m.intervalMileage)\n      inNextDays    = Math.floor inNextMileage / mpd\n\n      if inNextMileage < mpd * DAYS && m.frequency == RECURRING_ID\n        m.inNextMileage = inNextMileage\n        m.inNextDuration = moment().add(inNextDays, 'days').fromNow()\n        m\n\n    _(actions).compact().indexBy('item').values().value()\n\n  parse: (data) ->\n    data.actions.actionHolder\n","class App.Records extends Thorax.Collection\n  model: App.Record\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/records\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n\n  comparator: 'date'\n\n  currentEstimatedMileage: ->\n    mpd = @recentMilesPerDay()\n    return unless mpd\n\n    last        = @last().toJSON()\n    elapsedDays = moment().subtract(1, 'day')\n                          .diff(last.date, 'days')\n\n    currentMileage = last.mileage + (elapsedDays * mpd)\n    currentMileage\n\n  milesPerYear: ->\n    ONE_YEAR = 365\n    mpd = @milesPerDay()\n    return unless mpd\n\n    first       = @first().toJSON()\n    elapsedDays = moment().diff(first.date, 'days')\n\n    if elapsedDays < ONE_YEAR\n      remainingDays = ONE_YEAR - moment().dayOfYear()\n      mpy = mpd * (elapsedDays + remainingDays)\n    else\n      mpy = mpd * ONE_YEAR\n\n    Math.floor(mpy / 10) * 10\n\n  recentMilesPerDay: (days = 90) ->\n    return unless @length && @length > 1\n\n    ceil  = moment @last().get('date')\n    floor = ceil.subtract(days, 'days').startOf('month')\n\n    models = @filter (model) ->\n      modelDate = moment model.get('date')\n      model if modelDate.isAfter(floor)\n\n    first = _.first(models).toJSON()\n    last = _.last(models).toJSON()\n\n    if _.isEqual first, last\n      previousIndex = @indexOf(@last()) - 1\n      first = @at previousIndex\n      first = first.toJSON()\n\n    elapsedDays    = moment(last.date).diff(first.date, 'days')\n    elapsedMileage = last.mileage - first.mileage\n\n    +(elapsedMileage / elapsedDays).toFixed(2)\n\n  milesPerDay: ->\n    return unless @length\n\n    first = @first().toJSON()\n    last  = @last().toJSON()\n\n    return unless last.mileage\n\n    elapsedDays    = moment(last.date).diff(first.date, 'days')\n    elapsedMileage = last.mileage - first.mileage\n\n    +(elapsedMileage / elapsedDays).toFixed(2)\n\n  groupByYear: (data) ->\n    _(data or @toJSON())\n      .groupBy((r) -> +moment(r.date).year())\n      .pairs()\n      .map((r) ->\n        r[0] = +r[0]\n        r[1] = _.sortBy(r[1], (record) -> -moment(record.date))\n        _.zipObject(['year', 'records'], r)\n      )\n      .sortBy((r) -> -r.year)\n      .compact()\n      .value()\n","class App.Reminders extends Thorax.Collection\n  model: App.Reminder\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/reminders\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n","class App.Vehicles extends Thorax.Collection\n  model: App.Vehicle\n  url: '/api/vehicles'\n\n  comparator: 'position'\n","class App.VehicleHeaderView extends Thorax.View\n  name: 'vehicle_header'\n\n  events:\n    'click .back': 'goBack'\n    'click .js-name': 'showChangeNamePopover'\n    'click .js-settings': 'showSettingsPopover'\n\n    'keyup #filter': 'filterRecords'\n\n    'submit #header form': (e) -> e.preventDefault()\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: ->\n    @sessionView = new App.SessionView\n\n  goBack: (e) ->\n    e.preventDefault()\n    fragment = Backbone.history.fragment\n    fragments = fragment.split('/')\n    fragments.pop()\n    App.router.redirectTo fragments.join('/')\n\n  filterRecords: (e) ->\n    val = e.currentTarget.value\n    re  = new RegExp val, 'i'\n\n    @parent.$('#records tr').each ->\n      $this   = $(this)\n      content = $this.text()\n\n      $this.hide()\n      $this.show() if re.test(content)\n\n  showChangeNamePopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Vehicle Details'\n      populate: true\n      view: new App.EditVehicleView\n        model: @model\n\n  showSettingsPopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Vehicle Settings'\n      view: new App.VehicleSettingsView\n        model: @model\n        collection: @collection\n","class App.AddReminderView extends Thorax.View\n  name: 'add_reminder'\n\n  events:\n    'submit form': 'createOrUpdateRecord'\n    'click [data-destroy]': 'destroyRecord'\n\n  destroyRecord: (e) ->\n    e.preventDefault()\n    @model.destroy()\n    @parent.close()\n\n  createOrUpdateRecord: (e) ->\n    e.preventDefault()\n\n    if @model\n      @model.save @serialize()\n      @parent.close()\n    else\n      model = new App.Reminder @serialize()\n\n      if model.isValid()\n        @collection.create model\n        @parent.close()\n      else\n        _.each model.validationError, (error) =>\n          @$(\"[name=#{error.name}]\").closest('.form-group')\n            .addClass('has-error')\n","class App.AddServiceView extends Thorax.View\n  name: 'add_service'\n\n  events:\n    'submit form': 'createOrUpdateRecord'\n    'click [data-destroy]': 'destroyRecord'\n    'rendered': ->\n      _.defer =>\n        return unless @$el\n        @$('textarea').autosize()\n        @$('input[name=date]').datepicker({\n          format: 'M d, yyyy'\n          autoclose: true\n        })\n\n  initialize: ->\n    unless @model\n      @date = moment()\n      @currentEstimatedMileage = @collection.currentEstimatedMileage()\n\n  destroyRecord: (e) ->\n    e.preventDefault()\n    @model.destroy()\n    @parent.close()\n\n  createOrUpdateRecord: (e) ->\n    e.preventDefault()\n\n    if @model\n      @model.save @serialize()\n      @parent.close()\n    else\n      model = new App.Record @serialize()\n\n      if model.isValid()\n        @collection.create model\n        @parent.close()\n        e.target.reset()\n      else\n        _.each model.validationError, (error) =>\n          @$(\"[name=#{error.name}]\").closest('.form-group')\n            .addClass('has-error')\n","class App.AddVehicleView extends Thorax.View\n  name: 'add_vehicle'\n\n  events:\n    'submit form': 'createVehicle'\n\n  createVehicle: (e) ->\n    e.preventDefault()\n    model = new App.Vehicle @serialize()\n\n    if model.isValid()\n      @collection.create model\n      @parent.close()\n    else\n      _.each model.validationError, (error) =>\n        @$(\"[name=#{error.name}]\").closest('.form-group')\n          .addClass('has-error')\n","class App.EditVehicleNotesView extends Thorax.View\n  name: 'edit_vehicle_notes'\n\n  events:\n    'submit form': 'save'\n    'rendered': ->\n      _.delay =>\n        @$('textarea').autosize()\n\n  save: (e) ->\n    e.preventDefault()\n    @model.save @serialize()\n    @parent.close()\n","class App.EditVehicleView extends Thorax.View\n  name: 'edit_vehicle'\n\n  events:\n    'submit form': 'saveVehicle'\n\n  saveVehicle: (e) ->\n    e.preventDefault()\n    @model.set @serialize(), validate: true\n    if @model.isValid()\n      @model.save()\n      @parent.close()\n    else\n      _.each @model.validationError, (error) =>\n          @$(\"[name=#{error.name}]\").closest('.form-group')\n            .addClass('has-error')\n","class App.ImportRecordsView extends Thorax.View\n  name: 'import_records'\n\n  events:\n    'click a[class*=js-]': (e) -> e.preventDefault()\n    'click .js-import-records': 'importRecords'\n    'click .js-cancel-import': 'cancelImport'\n    'submit form': 'previewImport'\n\n  initialize: ->\n    @records = []\n\n  previewImport: (e) ->\n    e.preventDefault()\n    file = @$('input[type=file]')[0].files[0]\n    @preview = true\n    @render()\n\n    @parseFile file, (results) =>\n      data   = results.data\n      labels = data.shift()\n\n      @records = _.map data, (r) ->\n        _.zipObject(labels, r)\n\n      @collection.reset()\n      @collection.add @records\n\n  importRecords: ->\n    @importing = true\n    @render()\n\n    _.defer =>\n      @collection.reset()\n\n      # REVIEW: Probably don't do this.\n      _.each @records, (r) ->\n        @collection.create(r)\n      , this\n\n    @doneImporting()\n\n  doneImporting: ->\n    @doneImporting = true\n    @render()\n\n  cancelImport: ->\n    @preview = @importing = undefined\n    @render()\n\n  parseFile: (file, done) ->\n    Papa.parse file,\n      complete: done\n","class App.PopOverView extends Thorax.LayoutView\n  name: 'popover'\n  className: 'pop-over'\n  width: 340\n\n  events:\n    'click .close': 'close'\n    'click .back': 'back'\n\n  stack: []\n\n  toggle: (options) ->\n    @stack      = []\n    @stackEmpty = true\n    @title      = options.title\n\n    return if @isTextSelected()\n\n    @render()\n    options.view.retain()\n\n    @stack.push options\n    @setView options.view\n\n    if options.view.context\n      options.view.populate(options.view.context())\n    else\n      options.view.populate({}, {\n        children: false\n      })\n\n    @appendTo App.layout.$el\n    @setPosition(options)\n\n    @selectInput(options)\n\n  pushView: (options) ->\n    @title      = options.title\n    @stackEmpty = false\n\n    @render()\n    options.view.retain(this)\n    @stack.push options\n    @setView options.view\n\n    @delegateEvents()\n    @selectInput(options)\n\n  popView: ->\n    current     = @stack.pop()\n    previous    = _.last(@stack)\n\n    @title      = previous.title\n    @stackEmpty = @isLastInStack(previous)\n\n    @render()\n    current.view.release()\n    @setView previous.view\n    previous.view.delegateEvents()\n\n    @selectInput(options)\n\n  selectInput: (options = {}) ->\n    selector = options.focus || 'input, textarea'\n    @$(selector).first().select()\n\n  isTextSelected: ->\n    if window.getSelection\n      !!window.getSelection().toString()\n\n  isLastInStack: (view) ->\n    @stack[0] == view\n\n  setPosition: (options) ->\n    elem     = options.elem\n    top      = options.top\n    height   = @$el.outerHeight(true)\n    offset   = $(elem).offset()\n    position = offset\n    bounds   =\n      top: $(window).scrollTop()\n      left: 0\n      right: $(window).width()\n      bottom: $(window).height()\n\n    if @width > bounds.right\n      @width = bounds.right - 10\n\n    position.right = offset.left + @width\n\n    # Normal top\n    if _.isNumber(top)\n      position.top = offset.top + top\n    else\n      position.top = offset.top + $(elem).outerHeight()\n\n    position.bottom = position.top + height\n\n    # Right bound\n    if position.right > bounds.right\n      position.left = offset.left - @width + $(elem).outerWidth()\n\n    if position.left < bounds.left\n      position.left = (bounds.right - @width) / 2\n\n    # Bottom bound\n    if position.bottom > bounds.bottom + bounds.top\n      position.top = bounds.bottom - height + bounds.top\n\n    if position.top < bounds.top\n      position.top = bounds.top if position.top - bounds.top < 10\n\n    @$el.css\n      left: position.left\n      top: position.top\n      width: @width\n\n  back: (e) ->\n    e.preventDefault()\n    @popView()\n\n  close: (e) ->\n    e.preventDefault() if e\n\n    view = @getView()\n    view.release() if view\n    @release()\n\n    App.popover = new @constructor\n","class App.RecordsView extends Thorax.View\n  name: 'records'\n\n  events:\n    'click #records .record': 'showEditServicePopover'\n\n  initialize: ->\n    @records = @collection.groupByYear()\n    @listenTo @collection, 'add sync remove', ->\n      @records = @collection.groupByYear()\n      @render()\n\n  showEditServicePopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      title: 'Edit Service'\n      elem: e.currentTarget\n      focus: '[name=mileage]'\n      top: -80\n      view: new App.AddServiceView\n        collection: @collection\n        model: @collection.get($(e.currentTarget).data('id'))\n        vehicle: @model.toJSON()\n        context: ->\n          attrs = @model.attributes\n          {\n            date: moment(new Date(attrs.date)).utc().format('MMM DD, YYYY')\n            mileage: numeral(attrs.mileage).format('0,0')\n            cost: attrs.cost\n            notes: attrs.notes\n          }\n\n","class App.RemindersView extends Thorax.View\n  name: 'reminders'\n\n  events:\n    'click .js-add-reminder': 'showAddReminderPopover'\n    'click .js-reminder': 'showEditReminderPopover'\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  showAddReminderPopover: (e) ->\n    App.popover.toggle\n      title: 'Add Reminder'\n      elem: e.currentTarget\n      view: new App.AddReminderView\n        collection: @collection\n\n  showEditReminderPopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Reminder'\n      populate: true\n      view: new App.AddReminderView\n        model: $(e.currentTarget).model()\n        collection: @reminders\n","class App.RemoveVehicleConfirmationView extends Thorax.View\n  name: 'remove_vehicle_confirmation'\n\n  events:\n    'submit form': 'removeVehicle'\n\n  initialize: ->\n    @confirmation_word = 'delete'\n\n  removeVehicle: (e) ->\n    e.preventDefault()\n    data = @serialize()\n\n    if data.confirmation == @confirmation_word\n      @model.destroy()\n      App.router.redirectTo 'vehicles'\n    else\n      @$(\"[name=confirmation]\").closest('.form-group')\n        .addClass('has-error')\n","class App.RootView extends Thorax.LayoutView\n  el: '#app'\n\n  initialize: ->\n    Thorax.setRootObject(this)\n\n    _.bindAll this, 'closePopoversWithClick'\n    _.bindAll this, 'closePopoversWithEsc'\n\n    @on 'load:start', Thorax.loadHandler(\n      ->\n        NProgress.start()\n    , ->\n      NProgress.done()\n    )\n\n    $(document).on('click', @closePopoversWithClick)\n    $(document).on('keyup', @closePopoversWithEsc)\n\n  closePopoversWithClick: (e) ->\n    return if e.originalEvent.defaultPrevented\n\n    clickInPopover = $(e.target).closest('.pop-over').length\n    unless clickInPopover\n      App.popover.close()\n\n  closePopoversWithEsc: (e) ->\n    code = e.keyCode or e.which\n    if code == 27\n      App.popover.close()\n","class App.SessionMenu extends Thorax.View\n  name: 'session_menu'\n\n  events:\n    'click .js-logout': 'logout'\n\n  logout: (e) ->\n    e.preventDefault()\n    App.session.logout()\n","class App.SessionView extends Thorax.View\n  name: 'session_view'\n  tagName: 'a'\n  className: 'btn btn-default'\n\n  events:\n    'click': 'showSessionPopover'\n\n  initialize: ->\n    @model = App.session\n    @model.fetch()\n\n  showSessionPopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      elem: e.currentTarget\n      view: new App.SessionMenu\n        model: @model\n","class App.VehicleDetailsView extends Thorax.View\n  name: 'vehicle_details'\n\n  events:\n    'click .js-refresh-details': 'refresh'\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: (id) ->\n    @vehicles = App.vehicles\n    if @vehicles.length\n      @model = @vehicles.get(id)\n    else\n      @model = new App.Vehicle _id: id\n      @model.fetch()\n\n    @listenTo @model, 'change', @render\n\n    @vehicleHeaderView = new App.VehicleHeaderView\n      model: @model\n\n  refresh: ->\n    @model.save()\n","class App.VehicleNextActionsView extends Thorax.View\n  name: 'vehicle_next_actions'\n\n  initialize: ->\n    @schedule = new App.MaintenanceSchedule [], vehicleId: @model.id\n\n    if !@schedule.length\n      _scheduleFetch = @schedule.fetch()\n\n    if !@collection.length\n      _collectionFetch = @collection.fetch()\n\n    $.when(_scheduleFetch, _collectionFetch).then =>\n      @nextActions = @schedule.nextActions(\n        @collection.currentEstimatedMileage()\n        @collection.recentMilesPerDay()\n      )\n\n      @render()\n","class App.VehicleSettingsView extends Thorax.View\n  name: 'vehicle_settings'\n\n  events:\n    'click a[class*=js-]': (e) -> e.preventDefault()\n    'click .js-enable-cost': 'enableCost'\n    'click .js-import-records': 'importRecords'\n    'click .js-retire-vehicle': 'retireVehicle'\n    'click .js-remove-vehicle': 'removeVehicle'\n\n  enableCost: ->\n    settings = @model.settings()\n    @model.save\n      settings:\n        enableCost: !settings.enableCost\n\n  importRecords: ->\n    App.popover.pushView\n      title: 'Import Records'\n      view: new App.ImportRecordsView\n        model: @model\n        collection: @collection\n\n  retireVehicle: ->\n    alert 'Not yet implemented'\n\n  removeVehicle: ->\n    App.popover.pushView\n      title: 'Remove Vehicle'\n      view: new App.RemoveVehicleConfirmationView\n        model: @model\n","class App.VehicleView extends Thorax.View\n  name: 'vehicle'\n  id: 'vehicle'\n\n  events:\n    'click .js-add-service': 'showAddServicePopover'\n    'click .js-add-reminder': 'showAddReminderPopover'\n    'click .js-remove-record': 'removeRecord'\n    'click .js-edit-vehicle-notes': 'showEditVehicleNotesPopover'\n\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: (id) ->\n    @vehicles = App.vehicles\n    if @vehicles.length\n      @model = @vehicles.get(id)\n    else\n      @model = new App.Vehicle _id: id\n      @model.fetch()\n\n    @collection  = new App.Records [], vehicleId: id\n    @reminders   = new App.Reminders [], vehicleId: id\n\n    # Listeners\n    @listenTo @model, 'change', @render\n\n    @listenTo @collection, 'add sync remove', ->\n      @milesPerYear = @collection.milesPerYear()\n      @render()\n\n    # Child views\n    @recordsView = new App.RecordsView\n      model: @model\n      collection: @collection\n\n    @remindersView = new App.RemindersView\n      collection: @reminders\n\n    @vehicleHeaderView = new App.VehicleHeaderView\n      model: @model\n\n    @nextActionsView = new App.VehicleNextActionsView\n      model: @model\n      collection: @collection\n\n    @reminders.fetch()\n    @collection.fetch()\n\n  removeRecord: (e) ->\n    id = $(e.currentTarget).data('record-id')\n    if confirm 'Really delete record?'\n      record = @collection.get(id)\n      record.destroy()\n\n  showAddServicePopover: (e) ->\n    App.popover.toggle\n      title: 'Add Service'\n      elem: e.currentTarget\n      focus: '[name=mileage]'\n      view: new App.AddServiceView\n        collection: @collection\n        vehicle: @model.toJSON()\n\n  showAddReminderPopover: (e) ->\n    App.popover.toggle\n      title: 'Add Reminder'\n      elem: e.currentTarget\n      view: new App.AddReminderView\n        vehicle: @model\n        collection: @reminders\n\n  showEditVehicleNotesPopover: (e) ->\n    e.preventDefault()\n\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Vehicle Notes'\n      populate: true\n      view: new App.EditVehicleNotesView\n        model: @model\n","class App.VehiclesMenu extends Thorax.View\n  name: 'vehicles_menu'\n  collection: App.vehicles\n\n  events:\n    'click .add-vehicle': 'showAddVehiclePopover'\n\n  showAddVehiclePopover: (e) ->\n    e.preventDefault()\n    App.popover.pushView\n      title: 'Add Vehicle'\n      view: new App.AddVehicleView\n        collection: @collection\n","class App.VehiclesView extends Thorax.View\n  name: 'vehicles'\n  id: 'vehicles'\n\n  events:\n    'click .add-vehicle': 'showAddVehiclePopover'\n    'rendered': 'sortable'\n\n  sortable: ->\n    _.defer =>\n      collection = @collection\n      @$('#vehicles-menu').sortable\n        placeholder: \"sortable-placeholder col-md-3\"\n        update: (e, ui) ->\n          $(this).children().each (i, el) ->\n            model = $(el).model()\n            model.save position: i\n          collection.sort()\n\n  initialize: ->\n    @collection = App.vehicles\n    @sessionView = new App.SessionView\n\n  saveVehicle: (e) ->\n    e.preventDefault()\n    @collection.create @serialize(e)\n    e.target.reset()\n\n  showAddVehiclePopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Add Vehicle'\n      top: -5\n      view: new App.AddVehicleView\n        collection: @collection\n","class App.WelcomeView extends Thorax.View\n  name: 'welcome'\n  id: 'welcome'\n\n  events:\n    'submit form': 'login'\n    'click .try-again': 'tryAgain'\n\n  initialize: ->\n    @placeholder = 'E.g., ' + @randomEmail()\n    @user = {}\n\n  login: (e) ->\n    e.preventDefault()\n    @authenticating = true\n    @user = @serialize()\n\n    App.session.login(@user)\n    @render()\n\n  tryAgain: (e) ->\n    e.preventDefault()\n    @authenticating = false\n    @render()\n\n  randomEmail: ->\n    emails = [\n      'lando@cloudci.ty'\n      'robertpaulson@loustave.rn'\n      'drspaceman@rockefellerpla.ce'\n      'mal@firef.ly'\n    ]\n\n    _.sample(emails)\n","class App.ApplicationRouter extends Backbone.Router\n  routes:\n    '': 'welcome'\n    'vehicles': 'vehicles'\n    'vehicles/:id': 'vehicle'\n    'vehicles/:id/details': 'vehicleDetails'\n    'login/:uid/:token': 'login'\n\n  constructor: ->\n    _.each @routes, (method, route) ->\n      unless @constructor::[method]\n        @constructor::[method] = (options...) ->\n          @render method, options...\n    , this\n\n    super\n\n    @on 'route', ->\n      App.layout.$('.pop-over').remove()\n\n  redirectTo: (path) ->\n    @navigate path, trigger: true\n\n  render: (method, options...) ->\n    name = _.capitalize(method)\n    view = new App[name + 'View'](options...)\n    App.layout.setView view\n    App.currentView = view\n\n  login: (uid, token) ->\n    App.session.authorize({\n      uid: uid\n      token: token\n    })\n","$ App.start\n"],"sourceRoot":"/source/"}