{"version":3,"sources":["application.coffee","application_mixins.coffee","sync.coffee","application_helpers.coffee","MaintenanceAction.coffee","Record.coffee","Reminder.coffee","Session.coffee","Vehicle.coffee","MaintenanceSchedule.coffee","Records.coffee","Reminders.coffee","Vehicles.coffee","VehicleHeaderView.coffee","AddReminderView.coffee","AddServiceView.coffee","AddVehicleView.coffee","EditVehicleNotesView.coffee","EditVehicleView.coffee","ImportRecordsView.coffee","PopOverView.coffee","RecordsView.coffee","RemindersView.coffee","RemoveVehicleConfirmationView.coffee","RootView.coffee","SessionMenu.coffee","SessionView.coffee","VehicleDetailsView.coffee","VehicleSettingsView.coffee","VehicleView.coffee","VehiclesMenu.coffee","VehiclesView.coffee","WelcomeView.coffee","ApplicationRouter.coffee","start.coffee"],"names":[],"mappings":"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","file":"application.js","sourcesContent":["Handlebars.registerHelpers = (methods) ->\n  _.each methods, (fn, name) ->\n    Handlebars.registerHelper name, fn\n\nApp =\n  start: ->\n    @session = new App.Session\n    @layout  = new App.RootView\n    @router  = new App.ApplicationRouter\n    @popover = new App.PopOverView\n\n    @vehicles = new App.Vehicles\n\n    $.when(@session.authorize())\n      .then( =>\n        @session.on 'auth:resolve', =>\n          fragment = Backbone.history.fragment\n          if !fragment or /login/.test(fragment)\n            App.router.redirectTo 'vehicles'\n\n        @session.on 'auth:reject', ->\n          App.router.redirectTo ''\n\n        Backbone.history.start()\n\n        if @session.isAuthorized()\n          @vehicles.fetch()\n          @session.trigger 'auth:resolve'\n        else\n          @session.trigger 'auth:reject'\n      )\n\n_.bindAll App\nwindow.App = App\n","_.mixin\n  capitalize: (string) ->\n    string.charAt(0).toUpperCase() + string.slice(1)\n","_sync = Backbone.sync\n\nBackbone.sync = (method, model, options) ->\n  options.url = buildUrl(method, model, options)\n\n  if model && (method == 'create' || method == 'update' || method == 'patch')\n    options.contentType = 'application/json';\n    options.data = JSON.stringify(options.attrs || model.toJSON());\n\n  _error = options.error\n  options.error = (xhr, status, error_thrown) ->\n    _error?(xhr, status, error_thrown)\n    App.session.unauthorize() if xhr.status == 401\n\n  _sync.call(this, method, model, options)\n\nbuildUrl = (method, model, options) ->\n  q   = $.param(App.session.toRequestJSON())\n  url = _.result model, 'url'\n  [url, q].join('?')\n","Handlebars.registerHelpers\n  log: (obj) ->\n    console.log obj\n\n  formatDate: (format, date) ->\n    moment(new Date(date)).utc().format(format) if date\n\n  formatNumber: (format, number) ->\n    numeral(number).format(format) if number\n\n  capitalize: (str) ->\n    _.capitalize(str) if str\n\n  markdown: (str) ->\n    marked(str) if str\n\n  any: (collection, options) ->\n    if !_.isEmpty(collection)\n      options.fn(this)\n","class App.MaintenanceAction extends Thorax.Model\n","class App.Record extends Thorax.Model\n  validatePresence: ['date', 'notes']\n  idAttribute: '_id'\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n\n  set: (data) ->\n    data.date    = moment(data.date).utc().format('YYYY-MM-DD')\n    data.mileage = numeral(data.mileage).value()\n\n    super(data)\n","class App.Reminder extends Thorax.Model\n  validatePresence: ['reminder']\n  idAttribute: '_id'\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n","class App.Session extends Thorax.Model\n  urlRoot: '/session'\n  idAttribute: 'uid'\n\n  initialize: ->\n    @on 'change:token', @onChangeToken\n\n  toRequestJSON: ->\n    _.pick(@toJSON(), 'uid', 'token')\n\n  login: (data) ->\n    @save(data)\n\n  logout: ->\n    @destroy()\n    localStorage.clear()\n    @clear()\n    App.session = new @constructor\n\n  authorize: (data) ->\n    if data\n      @set(data)\n      localStorage.setItem 'session', JSON.stringify(@toJSON())\n    else\n      data = JSON.parse(localStorage.getItem('session'))\n      @set(data) if data\n\n  unauthorize: ->\n    @logout()\n\n  isAuthorized: ->\n    !!@get 'token'\n\n  onChangeToken: ->\n    if @isAuthorized()\n      @trigger 'auth:resolve'\n    else\n      @trigger 'auth:reject'\n","class App.Vehicle extends Thorax.Model\n  idAttribute: '_id'\n  validatePresence: ['name']\n  url: ->\n    \"/api/vehicles/#{@id}\"\n\n  settings: ->\n    @get('settings') || {}\n\n  hasVin: ->\n    !_.isEmpty @get('vin')\n\n  hasDetails: ->\n    !_.isEmpty @get('details')\n\n  validate: (attrs) ->\n    errors = _.map attrs, (v, k) =>\n      if _.contains(@validatePresence, k) and _.isEmpty(v)\n        {\n          name: k\n          message: 'cannot be empty'\n        }\n\n    errors = _.compact(errors)\n    errors unless _.isEmpty(errors)\n","class App.MaintenanceSchedule extends Thorax.Collection\n  model: App.MaintenanceAction\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/maintenance\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n\n  nextActions: (mileage, mpd) ->\n    actions = @map (model) ->\n      m             = model.toJSON()\n      inNextMileage = m.intervalMileage - (mileage % m.intervalMileage)\n      inNextDays    = Math.floor inNextMileage / mpd\n\n      if inNextMileage < mpd * 90 && m.frequency == 4\n        m.inNextMileage = inNextMileage\n        m.inNextDuration = moment().add(inNextDays, 'days').fromNow()\n        m\n\n    _(actions).compact().indexBy('item').values().value()\n\n  parse: (data) ->\n    data.actions.actionHolder\n","class App.Records extends Thorax.Collection\n  model: App.Record\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/records\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n\n  comparator: 'date'\n\n  currentEstimatedMileage: ->\n    mpd = @recentMilesPerDay()\n    return unless mpd\n\n    last        = @last().toJSON()\n    elapsedDays = moment().diff(last.date, 'days')\n\n    currentMileage = last.mileage + (elapsedDays * mpd)\n    Math.floor(currentMileage / 10) * 10\n\n  milesPerYear: ->\n    ONE_YEAR = 365\n    mpd = @milesPerDay()\n    return unless mpd\n\n    first       = @first().toJSON()\n    elapsedDays = moment().diff(first.date, 'days')\n\n    if elapsedDays < ONE_YEAR\n      remainingDays = ONE_YEAR - moment().dayOfYear()\n      mpy = mpd * (elapsedDays + remainingDays)\n    else\n      mpy = mpd * ONE_YEAR\n\n    Math.floor(mpy / 10) * 10\n\n  recentMilesPerDay: (days = 90) ->\n    return unless @length\n    ceil  = moment()\n    floor = ceil.subtract(days, 'days').startOf('month')\n\n    models = @filter (model) ->\n      modelDate = moment model.get('date')\n      model if modelDate.isAfter(floor)\n\n    first = _.first(models).toJSON()\n    last = _.last(models).toJSON()\n\n    if _.isEqual first, last\n      previousIndex = @indexOf(@last()) - 1\n      first = @at previousIndex\n      first = first.toJSON()\n\n    elapsedDays    = moment(last.date).diff(first.date, 'days')\n    elapsedMileage = last.mileage - first.mileage\n\n    +(elapsedMileage / elapsedDays).toFixed(2)\n\n  milesPerDay: ->\n    return unless @length\n\n    first = @first().toJSON()\n    last  = @last().toJSON()\n\n    elapsedDays    = moment(last.date).diff(first.date, 'days')\n    elapsedMileage = last.mileage - first.mileage\n\n    +(elapsedMileage / elapsedDays).toFixed(2)\n\n  groupByYear: (data) ->\n    _(data or @toJSON())\n      .groupBy((r) -> +moment(r.date).year())\n      .pairs()\n      .map((r) ->\n        r[0] = +r[0]\n        r[1] = _.sortBy(r[1], (record) -> -moment(record.date))\n        _.zipObject(['year', 'records'], r)\n      )\n      .sortBy((r) -> -r.year)\n      .compact()\n      .value()\n","class App.Reminders extends Thorax.Collection\n  model: App.Reminder\n  url: ->\n    \"/api/vehicles/#{@vehicleId}/reminders\"\n\n  initialize: (models, options) ->\n    @vehicleId = options.vehicleId\n","class App.Vehicles extends Thorax.Collection\n  model: App.Vehicle\n  url: '/api/vehicles'\n\n  comparator: 'position'\n","class App.VehicleHeaderView extends Thorax.View\n  name: 'vehicle_header'\n\n  events:\n    'click .back': 'goBack'\n    'click .js-name': 'showChangeNamePopover'\n    'click .js-settings': 'showSettingsPopover'\n\n    'keyup #filter': 'filterRecords'\n\n    'submit #header form': (e) -> e.preventDefault()\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: ->\n    @sessionView = new App.SessionView\n\n  goBack: (e) ->\n    e.preventDefault()\n    fragment = Backbone.history.fragment\n    fragments = fragment.split('/')\n    fragments.pop()\n    App.router.redirectTo fragments.join('/')\n\n  filterRecords: (e) ->\n    val = e.currentTarget.value\n    re  = new RegExp val, 'i'\n\n    @parent.$('#records tr').each ->\n      $this   = $(this)\n      content = $this.text()\n\n      $this.hide()\n      $this.show() if re.test(content)\n\n  showChangeNamePopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Vehicle Details'\n      populate: true\n      view: new App.EditVehicleView\n        model: @model\n\n  showSettingsPopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Vehicle Settings'\n      view: new App.VehicleSettingsView\n        model: @model\n        collection: @collection\n","class App.AddReminderView extends Thorax.View\n  name: 'add_reminder'\n\n  events:\n    'submit form': 'createOrUpdateRecord'\n    'click [data-destroy]': 'destroyRecord'\n\n  destroyRecord: (e) ->\n    e.preventDefault()\n    @model.destroy()\n    @parent.close()\n\n  createOrUpdateRecord: (e) ->\n    e.preventDefault()\n\n    if @model\n      @model.save @serialize()\n      @parent.close()\n    else\n      model = new App.Reminder @serialize()\n\n      if model.isValid()\n        @collection.create model\n        @parent.close()\n      else\n        _.each model.validationError, (error) =>\n          @$(\"[name=#{error.name}]\").closest('.form-group')\n            .addClass('has-error')\n","class App.AddServiceView extends Thorax.View\n  name: 'add_service'\n\n  events:\n    'submit form': 'createOrUpdateRecord'\n    'click [data-destroy]': 'destroyRecord'\n    'rendered': ->\n      _.delay =>\n        @$('textarea').autosize()\n        @$('input[name=date]').datepicker({\n          format: 'mm-dd-yyyy'\n          autoclose: true\n        })\n\n  initialize: ->\n    unless @model\n      @date = moment().format('MM-DD-YYYY')\n      @currentEstimatedMileage = @collection.currentEstimatedMileage()\n\n  destroyRecord: (e) ->\n    e.preventDefault()\n    @model.destroy()\n    @parent.close()\n\n  createOrUpdateRecord: (e) ->\n    e.preventDefault()\n\n    if @model\n      @model.save @serialize()\n      @parent.close()\n    else\n      model = new App.Record @serialize()\n\n      if model.isValid()\n        @collection.create model\n        @parent.close()\n        e.target.reset()\n      else\n        _.each model.validationError, (error) =>\n          @$(\"[name=#{error.name}]\").closest('.form-group')\n            .addClass('has-error')\n","class App.AddVehicleView extends Thorax.View\n  name: 'add_vehicle'\n\n  events:\n    'submit form': 'createVehicle'\n\n  createVehicle: (e) ->\n    e.preventDefault()\n    model = new App.Vehicle @serialize()\n\n    if model.isValid()\n      @collection.create model\n      @parent.close()\n    else\n      _.each model.validationError, (error) =>\n        @$(\"[name=#{error.name}]\").closest('.form-group')\n          .addClass('has-error')\n","class App.EditVehicleNotesView extends Thorax.View\n  name: 'edit_vehicle_notes'\n\n  events:\n    'submit form': 'save'\n    'rendered': ->\n      _.delay =>\n        @$('textarea').autosize()\n\n  save: (e) ->\n    e.preventDefault()\n    @model.save @serialize()\n    @parent.close()\n","class App.EditVehicleView extends Thorax.View\n  name: 'edit_vehicle'\n\n  events:\n    'submit form': 'saveVehicle'\n\n  saveVehicle: (e) ->\n    e.preventDefault()\n    @model.save @serialize()\n    @parent.close()\n","class App.ImportRecordsView extends Thorax.View\n  name: 'import_records'\n\n  events:\n    'click a[class*=js-]': (e) -> e.preventDefault()\n    'click .js-import-records': 'importRecords'\n    'click .js-cancel-import': 'cancelImport'\n    'submit form': 'previewImport'\n\n  initialize: ->\n    @records = []\n\n  previewImport: (e) ->\n    e.preventDefault()\n    file = @$('input[type=file]')[0].files[0]\n    @preview = true\n    @render()\n\n    @parseFile file, (results) =>\n      data   = results.data\n      labels = data.shift()\n\n      @records = _.map data, (r) ->\n        _.zipObject(labels, r)\n\n      @collection.reset()\n      @collection.add @records\n\n  importRecords: ->\n    @importing = true\n    @render()\n\n    _.defer =>\n      @collection.reset()\n\n      # REVIEW: Probably don't do this.\n      _.each @records, (r) ->\n        @collection.create(r)\n      , this\n\n    @doneImporting()\n\n  doneImporting: ->\n    @doneImporting = true\n    @render()\n\n  cancelImport: ->\n    @preview = @importing = undefined\n    @render()\n\n  parseFile: (file, done) ->\n    Papa.parse file,\n      complete: done\n","class App.PopOverView extends Thorax.LayoutView\n  name: 'popover'\n  className: 'pop-over'\n  width: 300\n\n  events:\n    'click .close': 'close'\n    'click .back': 'back'\n\n  stack: []\n\n  toggle: (options) ->\n    @stack      = []\n    @stackEmpty = true\n    @title      = options.title\n\n    return if @isTextSelected()\n\n    @render()\n    options.view.retain()\n\n    @stack.push options\n    @setView options.view\n\n    if options.view.context\n      options.view.populate(options.view.context())\n    else\n      options.view.populate({}, {\n        children: false\n      })\n\n    @appendTo App.layout.$el\n    @setPosition(options)\n\n    @selectInput(options)\n\n  pushView: (options) ->\n    @title      = options.title\n    @stackEmpty = false\n\n    @render()\n    options.view.retain(this)\n    @stack.push options\n    @setView options.view\n\n    @delegateEvents()\n    @selectInput(options)\n\n  popView: ->\n    current     = @stack.pop()\n    previous    = _.last(@stack)\n\n    @title      = previous.title\n    @stackEmpty = @isLastInStack(previous)\n\n    @render()\n    current.view.release()\n    @setView previous.view\n    previous.view.delegateEvents()\n\n    @selectInput(options)\n\n  selectInput: (options = {}) ->\n    selector = options.focus || 'input, textarea'\n    @$(selector).first().select()\n\n  isTextSelected: ->\n    if window.getSelection\n      !!window.getSelection().toString()\n\n  isLastInStack: (view) ->\n    @stack[0] == view\n\n  setPosition: (options) ->\n    elem     = options.elem\n    top      = options.top\n    height   = @$el.outerHeight(true)\n    offset   = $(elem).offset()\n    position = offset\n    bounds   =\n      top: $(window).scrollTop()\n      left: 0\n      right: $(window).width()\n      bottom: $(window).height()\n\n    position.right = offset.left + @width\n\n    # Normal top\n    if _.isNumber(top)\n      position.top = offset.top + top\n    else\n      position.top = offset.top + $(elem).outerHeight()\n\n    position.bottom = position.top + height\n\n    # Right bound\n    if position.right > bounds.right\n      position.left = offset.left - @width + $(elem).outerWidth()\n\n    # Bottom bound\n    if position.bottom > bounds.bottom + bounds.top\n      position.top = bounds.bottom - height + bounds.top\n\n    if position.top < bounds.top\n      position.top = bounds.top if position.top - bounds.top < 10\n\n    @$el.css\n      left: position.left\n      top: position.top\n      width: @width\n\n  back: (e) ->\n    e.preventDefault()\n    @popView()\n\n  close: (e) ->\n    e.preventDefault() if e\n\n    view = @getView()\n    view.release() if view\n    @release()\n\n    App.popover = new @constructor\n","class App.RecordsView extends Thorax.View\n  name: 'records'\n\n  events:\n    'click #records .record': 'showEditServicePopover'\n\n  initialize: ->\n    @records = @collection.groupByYear()\n    @listenTo @collection, 'add sync remove', ->\n      @records = @collection.groupByYear()\n      @render()\n\n  showEditServicePopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      title: 'Edit Service'\n      elem: e.currentTarget\n      focus: '[name=mileage]'\n      top: -80\n      view: new App.AddServiceView\n        collection: @collection\n        model: @collection.get($(e.currentTarget).data('id'))\n        vehicle: @model.toJSON()\n        context: ->\n          attrs = @model.attributes\n          {\n            date: moment(new Date(attrs.date)).utc().format('MM-DD-YYYY')\n            mileage: numeral(attrs.mileage).format('0,0')\n            cost: attrs.cost\n            notes: attrs.notes\n          }\n\n","class App.RemindersView extends Thorax.View\n  name: 'reminders'\n\n  events:\n    'click .js-add-reminder': 'showAddReminderPopover'\n    'click .js-reminder': 'showEditReminderPopover'\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  showAddReminderPopover: (e) ->\n    App.popover.toggle\n      title: 'Add Reminder'\n      elem: e.currentTarget\n      view: new App.AddReminderView\n        collection: @collection\n\n  showEditReminderPopover: (e) ->\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Reminder'\n      populate: true\n      view: new App.AddReminderView\n        model: $(e.currentTarget).model()\n        collection: @reminders\n","class App.RemoveVehicleConfirmationView extends Thorax.View\n  name: 'remove_vehicle_confirmation'\n\n  events:\n    'submit form': 'removeVehicle'\n\n  initialize: ->\n    @confirmation_word = 'delete'\n\n  removeVehicle: (e) ->\n    e.preventDefault()\n    data = @serialize()\n\n    if data.confirmation == @confirmation_word\n      @model.destroy()\n      App.router.redirectTo 'vehicles'\n    else\n      @$(\"[name=confirmation]\").closest('.form-group')\n        .addClass('has-error')\n","class App.RootView extends Thorax.LayoutView\n  el: '#app'\n\n  initialize: ->\n    Thorax.setRootObject(this)\n\n    _.bindAll this, 'closePopoversWithClick'\n    _.bindAll this, 'closePopoversWithEsc'\n\n    @on 'load:start', Thorax.loadHandler(\n      ->\n        NProgress.start()\n    , ->\n      NProgress.done()\n    )\n\n    $(document).on('click', @closePopoversWithClick)\n    $(document).on('keyup', @closePopoversWithEsc)\n\n  closePopoversWithClick: (e) ->\n    return if e.originalEvent.defaultPrevented\n\n    clickInPopover = $(e.target).closest('.pop-over').length\n    unless clickInPopover\n      App.popover.close()\n\n  closePopoversWithEsc: (e) ->\n    code = e.keyCode or e.which\n    if code == 27\n      App.popover.close()\n","class App.SessionMenu extends Thorax.View\n  name: 'session_menu'\n\n  events:\n    'click .js-logout': 'logout'\n\n  logout: (e) ->\n    e.preventDefault()\n    App.session.logout()\n","class App.SessionView extends Thorax.View\n  name: 'session_view'\n  tagName: 'a'\n  className: 'btn btn-default'\n\n  events:\n    'click': 'showSessionPopover'\n\n  initialize: ->\n    @model = App.session\n    @model.fetch()\n\n  showSessionPopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      elem: e.currentTarget\n      view: new App.SessionMenu\n        model: @model\n","class App.VehicleDetailsView extends Thorax.View\n  name: 'vehicle_details'\n\n  events:\n    'click .js-refresh-details': 'refresh'\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: (id) ->\n    @vehicles = App.vehicles\n    if @vehicles.length\n      @model = @vehicles.get(id)\n    else\n      @model = new App.Vehicle _id: id\n      @model.fetch()\n\n    @listenTo @model, 'change', @render\n\n    @vehicleHeaderView = new App.VehicleHeaderView\n      model: @model\n\n  refresh: ->\n    @model.save()\n","class App.VehicleSettingsView extends Thorax.View\n  name: 'vehicle_settings'\n\n  events:\n    'click a[class*=js-]': (e) -> e.preventDefault()\n    'click .js-enable-cost': 'enableCost'\n    'click .js-import-records': 'importRecords'\n    'click .js-retire-vehicle': 'retireVehicle'\n    'click .js-remove-vehicle': 'removeVehicle'\n\n  enableCost: ->\n    settings = @model.settings()\n    @model.save\n      settings:\n        enableCost: !settings.enableCost\n\n  importRecords: ->\n    App.popover.pushView\n      title: 'Import Records'\n      view: new App.ImportRecordsView\n        model: @model\n        collection: @collection\n\n  retireVehicle: ->\n    alert 'Not yet implemented'\n\n  removeVehicle: ->\n    App.popover.pushView\n      title: 'Remove Vehicle'\n      view: new App.RemoveVehicleConfirmationView\n        model: @model\n","class App.VehicleView extends Thorax.View\n  name: 'vehicle'\n  id: 'vehicle'\n\n  events:\n    'click .js-add-service': 'showAddServicePopover'\n    'click .js-add-reminder': 'showAddReminderPopover'\n    'click .js-remove-record': 'removeRecord'\n    'click .js-edit-vehicle-notes': 'showEditVehicleNotesPopover'\n\n    'click a[class*=js-]': (e) -> e.preventDefault()\n\n  initialize: (id) ->\n    @vehicles = App.vehicles\n    if @vehicles.length\n      @model = @vehicles.get(id)\n    else\n      @model = new App.Vehicle _id: id\n      @model.fetch()\n\n    @collection  = new App.Records [], vehicleId: id\n    @reminders   = new App.Reminders [], vehicleId: id\n    @maintenance = new App.MaintenanceSchedule [], vehicleId: id\n\n    # Listeners\n    @listenTo @model, 'change', @render\n\n    @listenTo @collection, 'add sync remove', ->\n      @milesPerYear = @collection.milesPerYear()\n      @render()\n\n    $.when(@collection.fetch(), @maintenance.fetch()).then =>\n      @nextActions = @maintenance.nextActions(\n        @collection.currentEstimatedMileage()\n        @collection.recentMilesPerDay()\n      )\n\n      @render()\n\n    # Child views\n    @recordsView = new App.RecordsView\n      model: @model\n      collection: @collection\n\n    @remindersView = new App.RemindersView\n      collection: @reminders\n\n    @vehicleHeaderView = new App.VehicleHeaderView\n      model: @model\n\n    @reminders.fetch()\n\n  removeRecord: (e) ->\n    id = $(e.currentTarget).data('record-id')\n    if confirm 'Really delete record?'\n      record = @collection.get(id)\n      record.destroy()\n\n  showAddServicePopover: (e) ->\n    App.popover.toggle\n      title: 'Add Service'\n      elem: e.currentTarget\n      focus: '[name=mileage]'\n      view: new App.AddServiceView\n        collection: @collection\n        vehicle: @model.toJSON()\n\n  showAddReminderPopover: (e) ->\n    App.popover.toggle\n      title: 'Add Reminder'\n      elem: e.currentTarget\n      view: new App.AddReminderView\n        vehicle: @model\n        collection: @reminders\n\n  showEditVehicleNotesPopover: (e) ->\n    e.preventDefault()\n\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Edit Vehicle Notes'\n      populate: true\n      view: new App.EditVehicleNotesView\n        model: @model\n","class App.VehiclesMenu extends Thorax.View\n  name: 'vehicles_menu'\n  collection: App.vehicles\n\n  events:\n    'click .add-vehicle': 'showAddVehiclePopover'\n\n  showAddVehiclePopover: (e) ->\n    e.preventDefault()\n    App.popover.pushView\n      title: 'Add Vehicle'\n      view: new App.AddVehicleView\n        collection: @collection\n","class App.VehiclesView extends Thorax.View\n  name: 'vehicles'\n  id: 'vehicles'\n\n  events:\n    'click .add-vehicle': 'showAddVehiclePopover'\n    'rendered': 'sortable'\n\n  sortable: ->\n    _.defer =>\n      collection = @collection\n      @$('#vehicles-menu').sortable\n        placeholder: \"sortable-placeholder col-md-3\"\n        update: (e, ui) ->\n          $(this).children().each (i, el) ->\n            model = $(el).model()\n            model.save position: i\n          collection.sort()\n\n  initialize: ->\n    @collection = App.vehicles\n    @sessionView = new App.SessionView\n\n  saveVehicle: (e) ->\n    e.preventDefault()\n    @collection.create @serialize(e)\n    e.target.reset()\n\n  showAddVehiclePopover: (e) ->\n    e.preventDefault()\n    App.popover.toggle\n      elem: e.currentTarget\n      title: 'Add Vehicle'\n      top: -5\n      view: new App.AddVehicleView\n        collection: @collection\n","class App.WelcomeView extends Thorax.View\n  name: 'welcome'\n  id: 'welcome'\n\n  events:\n    'submit form': 'login'\n    'click .try-again': 'tryAgain'\n\n  initialize: ->\n    @placeholder = 'E.g., ' + @randomEmail()\n    @user = {}\n\n  login: (e) ->\n    e.preventDefault()\n    @authenticating = true\n    @user = @serialize()\n\n    App.session.login(@user)\n    @render()\n\n  tryAgain: (e) ->\n    e.preventDefault()\n    @authenticating = false\n    @render()\n\n  randomEmail: ->\n    emails = [\n      'lando@cloudci.ty'\n      'robertpaulson@loustave.rn'\n      'drspaceman@rockefellerpla.ce'\n      'mal@firef.ly'\n    ]\n\n    _.sample(emails)\n","class App.ApplicationRouter extends Backbone.Router\n  routes:\n    '': 'welcome'\n    'vehicles': 'vehicles'\n    'vehicles/:id': 'vehicle'\n    'vehicles/:id/details': 'vehicleDetails'\n    'login/:uid/:token': 'login'\n\n  constructor: ->\n    _.each @routes, (method, route) ->\n      unless @constructor::[method]\n        @constructor::[method] = (options...) ->\n          @render method, options...\n    , this\n\n    super\n\n    @on 'route', ->\n      App.layout.$('.pop-over').remove()\n\n  redirectTo: (path) ->\n    @navigate path, trigger: true\n\n  render: (method, options...) ->\n    name = _.capitalize(method)\n    view = new App[name + 'View'](options...)\n    App.layout.setView view\n    App.currentView = view\n\n  login: (uid, token) ->\n    App.session.authorize({\n      uid: uid\n      token: token\n    })\n","$ App.start\n"],"sourceRoot":"/source/"}